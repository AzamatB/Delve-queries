/// Self-Join Practice Problems
// #4: Cumulative Sums
def trs = {
   (2018-01-01, -1000);
   (2018-01-02, 30);
   (2018-01-05, 2);
   (2018-01-09, -10);
   (2018-01-17, 50)
}

def strs = sort[trs]
// non-recursive formulation
def cumsums = id1 : Σ[id2, date, cf : strs(id1, _, _) ∧ strs(id2, date, cf) ∧ id2 <= id1]
// alternative recursive formulation, which looks more imperative than declarative
// Question: are these two equivalent in performance? Ideally, they should be the same.
def cumsums(id ∈ 1, ccf) = strs(id, _, ccf)
def cumsums(id, ccf) = ∃(cf : strs(id, _, cf) ∧ ccf = cf + cumsums[id-1])

def result(date, ccf) = ∃(id : strs(id, date, _) ∧ cumsums(id, ccf))
